version: '3.8'

services:
  web:
    image: registry.gitlab.com/strava_draw/strava_draw_api:web
    # image: strava_draw_api:latest
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn strava_draw.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 8000:8000
    expose:
      - 8000
    env_file:
      - ./.env.prod

  nginx:
    build: ./data/nginx
    image: registry.gitlab.com/strava_draw/strava_draw_api:nginx
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot_build/conf:/etc/letsencrypt
      - ./data/certbot_build/www:/var/www/certbot
      - static_volume:/home/app/web/staticfiles
      # - certs:/etc/nginx/certs
      # - html:/usr/share/nginx/html
      # - vhost:/etc/nginx/vhost.d
      # - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 443:443
      - 80:80
    depends_on:
      - web
    # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    build: ./data/certbot_build
    image: registry.gitlab.com/strava_draw/strava_draw_api:certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot_build/conf:/etc/letsencrypt
      - ./data/certbot_build/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_volume: